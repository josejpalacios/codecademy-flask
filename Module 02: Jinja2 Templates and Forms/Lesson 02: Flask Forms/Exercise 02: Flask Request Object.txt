Every time a client communicates with a server it does so through a request.
By default our Flask routes only support GET requests.
These are requests for data such as what to display in a browser window.

When submitting a form through a website, the form data is sent as a POST request.
This type of request wants to add data to the app.
Routes can handle POST requests if it is specified in the methods argument of the route() decorator.

@app.route("/", methods=["GET", "POST"])

By default methods is set to [“GET”].
When adding “POST” to a route’s methods,
be sure to include “GET” if you plan for the route to handle those requests as well.

Flask provides access to the data in the request through the request object.
Importing the request object allows us to access everything about the requests
to our app including form data and the request method such as GET or POST.

When data is sent via a form submission it can be accessed using the form attribute of the request object. The form attribute is a dictionary with the form’s field names as the keys and the associated data as the values. For example, if a text input had the name "my_text", then the data access would look like this.

text_in_field = request.form["my_text"]
